/*
 * main_cpp.cpp
 *
 * @date Jan 15, 2024
 * @author PopkovaDA
 * @brief Весь код будет тут. Из-за того, что Cube создает только main.c, но не main.cpp,
 * 		  функция main на С++ будет вызываться из main.c
 *
 *
 */

#include "main_cpp.h"
#include "stm32f1xx_hal.h"
#include "storage/CO_storageEeprom.h"
#include "defines.h"


void mainCPP(void){

	// Ошибка перегрузки
	bool errorOverload = 0;

/*--------------------------------------- Инициализация датчика температуры ----------------------------------------------*/
	  // Датчик температуры
	  DS18B20 temperatureSensor;

	  DS18B20_Init(&temperatureSensor, &huart3);

	  DS18B20_InitializationCommand(&temperatureSensor);
	  DS18B20_ReadRom(&temperatureSensor);
	  DS18B20_ReadScratchpad(&temperatureSensor);

	  uint8_t settings[3];
	  settings[0] = temperatureSensor.temperatureLimitHigh;
	  settings[1] = temperatureSensor.temperatureLimitLow;
	  settings[2] = DS18B20_12_BITS_CONFIG;

	  DS18B20_InitializationCommand(&temperatureSensor);
	  DS18B20_SkipRom(&temperatureSensor);
	  DS18B20_WriteScratchpad(&temperatureSensor, settings);

/*----------------------------------------------------------------------------------------------------------------------*/

	// Запуск АЦП
	HAL_ADCEx_InjectedStart_IT(&hadc1);

	// Включить выход
	HAL_GPIO_WritePin(ON_OFF_GPIO_Port, ON_OFF_Pin, GPIO_PIN_SET);

	// Выключить резисторы напряжения
	HAL_GPIO_WritePin(SP1_GPIO_Port, SP1_Pin | SP2_Pin | SP3_Pin | SP4_Pin, GPIO_PIN_RESET);
	uint16_t adc = 0;


	while(1) {

	  	canopen_app_process();
		HAL_ADCEx_InjectedStart_IT(&hadc1);

/*----------------------------------------- Обработка значений с датчика температуры DS18B20 ------------------------------*/
	  	DS18B20_InitializationCommand(&temperatureSensor);
	    DS18B20_SkipRom(&temperatureSensor);
	    DS18B20_ConvertT(&temperatureSensor, DS18B20_DATA);

	    DS18B20_InitializationCommand(&temperatureSensor);
	    DS18B20_SkipRom(&temperatureSensor);
	    DS18B20_ReadScratchpad(&temperatureSensor);

/*------------------------------------------ Проверка перегрева и перегрузки ------------------------------------------------*/

/*		if((temperatureSensor.temperature > TEMP_MAX || current > CURRENT_MAX) && !errorOverload){
			// Отключение нагрузки
			errorOverload = 1;
			HAL_GPIO_WritePin(ON_OFF_GPIO_Port, ON_OFF_Pin, GPIO_PIN_RESET);
			ledOn(0);
		}

		if (temperatureSensor.temperature <= TEMP_MAX && current <= CURRENT_MAX && errorOverload) {
			// Ждать пока температура не придет в норму
			errorOverload = 0;
			HAL_GPIO_WritePin(ON_OFF_GPIO_Port, ON_OFF_Pin, GPIO_PIN_SET);
			ledOff(0);
		}*/

/*------------------------------------------ Запись и чтение CANOpen --------------------------------------------------------------*/

	    OD_PERSIST_COMM.x3F00_temperature = (int16_t)temperatureSensor.temperature;
	    OD_PERSIST_COMM.x3F02_voltage_Out = voltageOut;
	    OD_PERSIST_COMM.x3F03_current = adcData[2];

	    bool resistor = OD_PERSIST_COMM.x5000_resistor;
	    HAL_GPIO_WritePin(TERM_RESIST_GPIO_Port, TERM_RESIST_Pin, (GPIO_PinState)resistor);

/*-------------------------------------------------------------------------------------------------------------------------*/
// У модулей Nb и 15-тиваттных аккумулятора нет
#ifndef Nb
	    OD_PERSIST_COMM.x3F01_voltage_AKB = voltageAKB;

	    // Светодиод "Аккумулятор" включается, когда напряжение на аккумуляторе >= 11В или 22В
	    HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, (GPIO_PinState)(voltageAKB >= VOLTAGE_AKB_MIN));
#endif

	  	//HAL_Delay(10);
	}

}


